//////////////////////
// WiFi Definitions //
//////////////////////
const char WiFiAPPSK[] = "esp12345";

// hardware information about analog switched connections
static constexpr uint8_t NUM_ports = 14;
static constexpr struct tSwitchInput {
  uint8_t PortNum;
  uint8_t IC_num; //!< U2 -> 0, U3 -> 1
} SwitchInput[] = //! ports are in order they are located on P1
    {{3, 0},      // input connected to Voltage pickup
     {4, 1}, {6, 1}, {7, 1}, {0, 1}, {5, 1}, {3, 1}, // connected to P1
     {4, 0}, {6, 0}, {0, 0}, {1, 0}, {7, 0}, {5, 0},
     {2, 1}}; // input connected to ground

static constexpr uint8_t OpenPort[2] = {2,
                                        1}; // open inputs for U2 and U3 chips
static constexpr uint8_t ControlLines[Num74HC4051][NumCtrlLines_74HC4051] = {
    {D2, D1, D0}, {D7, D6, D5}}; // numbers of NodeMCU IO ports

static void SetPins() {
    for (uint8_t SwitchI = 0; SwitchI < Num74HC4051; ++SwitchI)
      for (uint8_t PinI = 0; PinI < NumCtrlLines_74HC4051; PinI++)
        pinMode(ControlLines[SwitchI][PinI], OUTPUT);

    pinMode(LED_PIN, OUTPUT);
    digitalWrite(LED_PIN, 0);
} // SetPins

static void ConnectPort(uint8_t InputI) {
  auto &n = SwitchInput[InputI];
  Set74HC4051_code(n.PortNum, n.IC_num); // connect the line we want
  Set74HC4051_code(OpenPort[1 - n.IC_num],
                   1 - n.IC_num); // connect another 74HC4051 to open line
  yield();
  delayMicroseconds(Delay);
}
